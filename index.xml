<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>bminus</title><link>https://bminus.io/</link><description>Recent content on bminus</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 18 Mar 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://bminus.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Nahamcon 2021 - Some Really Ordinary Program</title><link>https://bminus.io/posts/some-really-ordinary-program/</link><pubDate>Thu, 18 Mar 2021 00:00:00 +0000</pubDate><guid>https://bminus.io/posts/some-really-ordinary-program/</guid><description>Binary Exploitation Challenge #file some-really-ordinary-program some-really-ordinary-program: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), statically linked, stripped # pwn checksec some-really-ordinary-program [*] '/data/nahamcon/pwn/some-really-ordinary-program' Arch: amd64-64-little RELRO: No RELRO Stack: No canary found NX: NX disabled PIE: No PIE (0x400000) RWX: Has RWX segments This is a 64 bit statically linked binary with no standard binary mitigations enabled. Judging by the challenge name, it will require use of Sigreturn Oriented Programming(SROP). I&amp;rsquo;m fairly new to the concept of SROP so it was a great challenge to practice.</description></item></channel></rss>